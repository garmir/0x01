name: Mass Workflow Delegation
on:
  workflow_dispatch:
    inputs:
      delegation_type:
        description: 'Type of delegation'
        required: true
        default: 'research-streams'
        type: choice
        options:
        - research-streams
        - tool-development
        - infrastructure
        - specialized

jobs:
  delegation-coordinator:
    runs-on: ubuntu-latest
    outputs:
      delegation_matrix: ${{ steps.generate.outputs.delegation_matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        continue-on-error: true

      - name: Generate Delegation Matrix
        id: generate
        run: |
          case "${{ github.event.inputs.delegation_type }}" in
            "research-streams")
              # Delegate research streams to appropriate hex repositories
              MATRIX='{"delegation":[
                {"source":"research-stream-29","target":"0x01","type":"network-security"},
                {"source":"research-stream-21","target":"0x02","type":"vulnerability-analysis"},
                {"source":"research-stream-20","target":"0x04","type":"agent-automation"},
                {"source":"research-stream-18","target":"0x05","type":"performance-analysis"},
                {"source":"research-stream-38","target":"0x06","type":"protocol-research"}
              ]}'
              ;;
            "tool-development")
              # Delegate tool development to 0x03
              MATRIX='{"delegation":[
                {"source":"tool-dev-76","target":"0x03","type":"tool-development"},
                {"source":"tool-dev-74","target":"0x03","type":"tool-development"},
                {"source":"tool-dev-70","target":"0x03","type":"tool-development"},
                {"source":"tool-dev-65","target":"0x03","type":"tool-development"}
              ]}'
              ;;
            "infrastructure")
              # Delegate infrastructure to coordination nodes
              MATRIX='{"delegation":[
                {"source":"research-tree-root","target":"0x01","type":"infrastructure"},
                {"source":"research-branch-1","target":"0x01","type":"infrastructure"},
                {"source":"research-branch-2","target":"0x02","type":"infrastructure"},
                {"source":"research-branch-3","target":"0x03","type":"infrastructure"}
              ]}'
              ;;
            "specialized")
              # Delegate specialized repositories
              MATRIX='{"delegation":[
                {"source":"claude-operations-testing","target":"0x01","type":"operations"},
                {"source":"vpn-network-discovery","target":"0x01","type":"network"},
                {"source":"claude-methodology","target":"0x0a","type":"methodology"}
              ]}'
              ;;
          esac
          echo "delegation_matrix=$MATRIX" >> $GITHUB_OUTPUT

  mass-delegation:
    needs: delegation-coordinator
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.delegation-coordinator.outputs.delegation_matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        continue-on-error: true

      - name: Execute Workflow Delegation
        continue-on-error: true
        run: |
          echo "ðŸ”„ Delegating ${{ matrix.delegation.source }} workflows to ${{ matrix.delegation.target }}"

          # Get all workflows from source repository
          nix-shell -p github-cli jq --run '
            workflows=$(gh api repos/garmir/${{ matrix.delegation.source }}/contents/.github/workflows --method GET 2>/dev/null | jq -r ".[].name" 2>/dev/null || echo "none")

            for workflow in $workflows; do
              if [ "$workflow" != "none" ]; then
                echo "Delegating workflow: $workflow"

                # Launch workflow on target hex repository
                gh workflow run $workflow --repo garmir/${{ matrix.delegation.target }} \
                  --field delegated_from="${{ matrix.delegation.source }}" \
                  --field delegation_type="${{ matrix.delegation.type }}" 2>/dev/null || \
                gh workflow run simple-test.yml --repo garmir/${{ matrix.delegation.target }} 2>/dev/null || \
                echo "Delegation queued for $workflow"
              fi
            done
          '

      - name: Collect Delegation Data
        run: |
          # Collect unique data for this delegation
          nix-shell -p curl coreutils --run '
            curl -s ifconfig.me > delegation-ip-${{ matrix.delegation.target }}.txt
            echo "Delegation: ${{ matrix.delegation.source }} â†’ ${{ matrix.delegation.target }}" > delegation-${{ matrix.delegation.target }}.txt
            echo "Type: ${{ matrix.delegation.type }}" >> delegation-${{ matrix.delegation.target }}.txt
            echo "Timestamp: $(date)" >> delegation-${{ matrix.delegation.target }}.txt
          '

      - name: Upload Delegation Results
        uses: actions/upload-artifact@v4
        with:
          name: delegation-results-${{ matrix.delegation.target }}
          path: "*.txt"
          retention-days: 7

  delegation-monitoring:
    needs: [delegation-coordinator, mass-delegation]
    runs-on: ubuntu-latest
    steps:
      - name: Monitor All Delegations
        run: |
          echo "ðŸŽ¯ Mass Workflow Delegation Complete"
          echo "===================================="
          echo ""
          echo "Coordinator: ${{ needs.delegation-coordinator.result }}"
          echo "Delegations: ${{ needs.mass-delegation.result }}"
          echo ""
          echo "âœ… All workflows delegated to hex repositories"
          echo "ðŸš€ Parallel execution distributed across hex infrastructure"