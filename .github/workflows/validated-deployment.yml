name: Validated SuperClaude Deployment
on:
  workflow_dispatch:
    inputs:
      deployment_scale:
        description: 'Deployment scale'
        required: true
        default: 'medium'
        type: choice
        options:
        - small
        - medium
        - large
        - maximum

jobs:
  deployment-coordinator:
    runs-on: ubuntu-latest
    outputs:
      target_repos: ${{ steps.generate.outputs.target_repos }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        continue-on-error: true

      - name: Generate Deployment Matrix
        id: generate
        run: |
          case "${{ github.event.inputs.deployment_scale }}" in
            "small")
              REPOS='{"hex":["0x01","0x02","0x03","0x04","0x05"]}'
              ;;
            "medium")
              REPOS='{"hex":["0x01","0x02","0x03","0x04","0x05","0x06","0x07","0x08","0x09","0x0a","0x0b","0x0c","0x0d","0x0e","0x0f"]}'
              ;;
            "large")
              # Generate hex repos 0x01 through 0x32 (50 repos)
              REPOS='{"hex":['
              for i in {1..50}; do
                hex=$(printf "\"0x%02x\"" $i)
                REPOS="$REPOS$hex"
                if [ $i -lt 50 ]; then REPOS="$REPOS,"; fi
              done
              REPOS="$REPOS]}"
              ;;
            "maximum")
              # Generate hex repos 0x01 through 0x64 (100 repos)
              REPOS='{"hex":['
              for i in {1..100}; do
                hex=$(printf "\"0x%02x\"" $i)
                REPOS="$REPOS$hex"
                if [ $i -lt 100 ]; then REPOS="$REPOS,"; fi
              done
              REPOS="$REPOS]}"
              ;;
          esac
          echo "target_repos=$REPOS" >> $GITHUB_OUTPUT

      - name: Ubuntu Fallback Matrix
        if: failure()
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y jq
          REPOS='{"hex":["0x01","0x02","0x03","0x04","0x05"]}'
          echo "target_repos=$REPOS" >> $GITHUB_OUTPUT

  validated-deployment:
    needs: deployment-coordinator
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.deployment-coordinator.outputs.target_repos) }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        continue-on-error: true

      - name: Create Repository ${{ matrix.hex }}
        continue-on-error: true
        run: |
          # Repository specialization based on hex pattern
          SPEC_NUM=$(echo "${{ matrix.hex }}" | sed 's/0x//' | sed 's/^0*//')
          MOD=$((SPEC_NUM % 10))

          case "$MOD" in
            1) DESC="SuperClaude Framework - Network Security Research Node"; SPECIALTY="network-security" ;;
            2) DESC="SuperClaude Framework - Vulnerability Analysis Node"; SPECIALTY="vulnerability-analysis" ;;
            3) DESC="SuperClaude Framework - Tool Development Node"; SPECIALTY="tool-development" ;;
            4) DESC="SuperClaude Framework - Agent Automation Node"; SPECIALTY="agent-automation" ;;
            5) DESC="SuperClaude Framework - Performance Analysis Node"; SPECIALTY="performance-analysis" ;;
            6) DESC="SuperClaude Framework - Protocol Research Node"; SPECIALTY="protocol-research" ;;
            7) DESC="SuperClaude Framework - Credential Research Node"; SPECIALTY="credential-research" ;;
            8) DESC="SuperClaude Framework - Data Processing Node"; SPECIALTY="data-processing" ;;
            9) DESC="SuperClaude Framework - Community Infrastructure Node"; SPECIALTY="community-infrastructure" ;;
            0) DESC="SuperClaude Framework - Integration Testing Node"; SPECIALTY="integration-testing" ;;
          esac

          nix-shell -p github-cli --run "gh repo create ${{ matrix.hex }} --public --description \"$DESC\"" || echo "Repository exists"

      - name: Deploy Validated Workflow
        continue-on-error: true
        run: |
          # Deploy the validated comprehensive workflow to this hex repository
          nix-shell -p github-cli curl --run '
            curl -s https://raw.githubusercontent.com/garmir/0x01/main/.github/workflows/comprehensive-claude-operations.yml > validated-workflow.yml
            gh api repos/garmir/${{ matrix.hex }}/contents/.github/workflows/comprehensive-operations.yml --method PUT \
              --field message="Deploy validated SuperClaude methodology for ${{ matrix.hex }}" \
              --field content="$(base64 -w 0 validated-workflow.yml)" || echo "Workflow exists"
          '

      - name: Execute Framework Validation
        continue-on-error: true
        run: |
          # Launch the validated workflow on this repository
          nix-shell -p github-cli --run '
            gh workflow run comprehensive-operations.yml --repo garmir/${{ matrix.hex }} || echo "Execution queued"
          '

      - name: Collect Repository Intelligence
        run: |
          # Collect unique data for this repository instance
          nix-shell -p curl jq --run '
            curl -s ifconfig.me > external-ip-${{ matrix.hex }}.txt
            echo "${{ matrix.hex }} deployment: $(date)" > deployment-log-${{ matrix.hex }}.txt
            echo "Repository specialization: $SPECIALTY" >> deployment-log-${{ matrix.hex }}.txt
          '

      - name: Upload Deployment Results
        uses: actions/upload-artifact@v4
        with:
          name: deployment-${{ matrix.hex }}-results
          path: |
            *.txt
            *.yml
          retention-days: 7